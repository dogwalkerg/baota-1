import{G as a,M as t,a7 as e,u as s,o as l,l as n,H as r,b as o,bJ as u,an as i,h as c,e as p}from"./utils-lib.js?v=1734676359";import{_ as g}from"./index277.js?v=1734676359";import{_ as m}from"./index90.js?v=1734676359";import{g as d,s as h,r as v,h as y,R as f,e as w,c as b,k as _,l as x,x as S,p as D,y as L,F as P,q,v as C,M as T,A as k}from"./base-lib.js?v=1734676359";import{J as R,K as E,M as A,N as j,O,P as B,Q as I,R as F,L as V}from"./useStore6.js?v=1734676359";const U=d("LOG-ANALYSE-STORE",(()=>{const s=v(!1),l=v({type:"logs",name:""}),n=v([]),r=v({status:!1,channel:"",cycle:0,path:""}),o=v({}),u=v(""),i=v(!1),c=v(!1),p=v(0),g=y({p:1,row:10,path:""}),m=v(),d=v(),h=y({give:r.value.channel,status:Boolean(r.value.status),cycle:1});return{isRefreshList:s,routeData:l,logPath:u,msgForm:h,scanData:r,tableData:n,tableParam:g,loading:i,processPopup:c,percentum:p,rowData:o,getLogsTableData:async t=>{try{const s=await a({loading:i,request:E(t),data:{data:Array,page:String}});return{data:s.data,total:e(s.page)}}catch(s){return{data:[],total:0,other:{}}}},logScanEvent:async()=>{try{const{status:t,msg:e}=await a({loading:i,request:A({path:u.value}),data:{status:Boolean,msg:String}});return{status:t,msg:e}}catch(t){return{status:!1,msg:"扫描失败"}}},delAllLogDataEvent:async()=>{try{return await a({loading:"正在清空日志，请稍后...",request:B({path:u.value}),message:!0}),{status:!0,msg:"清空日志成功"}}catch(t){return{status:!1,msg:"清空日志失败"}}},tableColumn:m,getDetailData:async()=>{try{const a=await I({path:"/www/wwwlogs/"+l.value.name+".log",type:o.value.type,time:o.value.start_time});return{data:a.data.msg||[],status:a.status,msg:"获取详情数据成功"}}catch(a){return{data:[],status:!1,msg:"获取详情数据失败"}}},logScanForm:d,onConfirmScanConfig:async t=>{try{return await a({loading:"正在设置定期扫描,请稍候...",request:F(t),data:{msg:String},message:!0}),{status:!0,msg:"设置定期扫描成功"}}catch(e){return{status:!1,msg:"设置定期扫描失败"}}},getLogsPath:async()=>{try{const e=await a({loading:i,request:R({siteName:l.value.name}),data:{log_file:String,status:Boolean,msg:String},success:a=>{u.value=a.log_file,g.path=a.log_file,a.status||t.error(a.msg)}});return{data:e.log_file,status:e.status,msg:e.msg}}catch(e){return{data:"",status:!1,msg:"获取日志路径失败"}}},getScanData:async()=>{try{const{data:t}=await a({request:O({path:u.value}),success:function({data:a}){r.value=a,h.give=a.channel?a.channel.split(","):[],h.status=1==a.status,h.cycle=a.cycle}});return{data:{give:t.channel,status:1==t.status,cycle:t.cycle},status:!0,msg:"获取扫描数据成功"}}catch(t){return{status:!1,msg:"获取扫描数据失败"}}},startScanTimer:async a=>{c.value=!0;const e=setInterval((async()=>{const{data:l}=await j({path:u.value});p.value=l.msg,100===l.msg&&(clearInterval(e),c.value=!1,t.success("扫描完成"),s.value=!0,a&&a())}),1e3)}}})),H=()=>h(U()),M=o();s();const N=[["xss","XSS"],["sql","SQL"],["san","扫描"],["php","PHP攻击"],["ip","IP(top100)"],["url","URL(top100)"]],G=U(),{routeData:J,logPath:Q,rowData:W,msgForm:K,isRefreshList:X}=h(G),{getLogsPath:Y,getLogsTableData:z,getScanData:Z,startScanTimer:$,logScanEvent:aa,delAllLogDataEvent:ta,getDetailData:ea,onConfirmScanConfig:sa}=U(),la=async()=>{await l({title:"清空扫描日志【".concat(J.value.name,"】"),type:"input",input:{content:"清空日志"},icon:"warning-filled",content:"风险操作，清空该扫描日志后，将无法查到以往的扫描日志记录，此操作不可逆，是否继续清空？"}),await ta(),X.value=!0},na=async()=>{await l({title:"日志扫描",icon:"warning-filled",content:"建议在服务器负载较低时进行安全分析，本次将对【".concat(J.value.name,".log】文件进行扫描，可能等待时间较长，是否继续？")});const a=await aa();if(!a.status)return M.error(a.msg);$()},ra=v([{label:"访问次数",prop:"num",width:80},{label:"访问路径",prop:"path",showOverflowTooltip:!0}]),oa=f([{label:"攻击ip",prop:"ip"},{label:"攻击时间",prop:"time"},{label:"user-agent",prop:"ua",showOverflowTooltip:!0},{label:"请求URL",width:210,render:a=>"san"===W.value.type?a.url:w("span",{class:"bg-[#f9f2f4] text-[#c7254e] break-words"},[a.url])}]),ua=v(),ia=async a=>{try{const{data:t,status:e,msg:s}=await ea(),l=["sql","san","xss","php"];return ua.value=l.includes(a)?oa.value:ra.value,e?{data:t,total:t.length,other:{}}:{data:[],total:0,other:{}}}catch(t){return{data:[],total:0,other:{}}}},ca=async(a,t,e)=>{try{await t();const{give:a,cycle:e,status:s}=K.value,l={status:s?1:0,cycle:e,channel:a,path:Q.value},n=await sa(l);return X.value=!0,n.status}catch(s){}},pa=()=>{if(""===Q.value)return M.error("配置文件丢失");n({title:"定期扫描",area:48,showFooter:!0,component:()=>r((()=>import("./scan-form.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)})},ga={class:"p-2rem"},ma={class:"py-[12px] px-[16px]"},da={class:"flex justify-between mb-[4px]"},ha={class:"download-speed-top-score"},va=p(b({__name:"index",props:{type:{default:"logs"},name:{default:""}},setup(a,{expose:t}){const e=a,{mainHeight:l}=s(),o=U(),{isRefreshList:p,scanData:d,processPopup:v,percentum:y}=h(o),{BtTable:f,BtPage:b,refresh:R}=u({request:a=>{const{limit:t,...s}=a;return(async(a,t)=>{try{if(!Q.value){if(J.value=t,"site"===t.type);else{const{selectedWebSite:a}=h(V());J.value={name:a.value,type:t.type}}if(!J.value.name)return{data:[],total:0}}return await Y(),await Z(),await z({...a,path:Q.value})}catch(e){return{data:[],total:0}}})({...s,row:t},e)},columns:[{label:"扫描时间",prop:"start_time",showOverflowTooltip:!0},{label:"耗时",prop:"time",render:a=>{var t;return(null==(t=a.time)?void 0:t.substring(0,4))+"秒"}},...N.map((a=>({label:a[1],prop:a[0],width:"ip"!==a[0]&&"php"!==a[0]&&"url"!==a[0]?50:"auto",render:function(t){return t[a[0]]?w("span",{class:"bt-link ".concat("ip"===a[0]||"url"===a[0]?"":"!text-danger"),onClick:()=>(async(a,t)=>{W.value=a,W.value.type=t,["sql","san","xss","php"].includes(t)||(ra.value[1].label="url"===t?"访问URL":"访问ip"),n({title:"日志详情",area:72,compData:{row:a,type:t},component:()=>r((()=>import("./log-detail.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)})})(t,a[0])},[t[a[0]]]):w("span",null,[t[a[0]]])}}))),{label:"合计",render:function(a){let t=0;for(let e in a)"start_time"!=e&&"time"!=e&&"ip"!=e&&"url"!=e&&"is_status"!=e&&a[e]>0&&(t+=a[e]);return w("span",null,[t])}}],extension:[i(p)]});return t({init:R}),(a,t)=>{const e=k,s=m,n=g,r=c;return _(),x("div",null,[w(s,null,{"header-left":S((()=>[w(e,{onClick:D(na),type:"primary"},{default:S((()=>t[1]||(t[1]=[L("日志扫描")]))),_:1},8,["onClick"]),w(e,{type:"default",class:P({"not-status":!Boolean(D(d).status)}),onClick:D(pa)},{default:S((()=>[t[2]||(t[2]=L(" 定期扫描 ")),q("i",{class:P("text-[1.2rem] svgtofont-icon-".concat(D(d).status?"start text-[#20a53a]":"stop text-danger"," "))},null,2)])),_:1},8,["class","onClick"]),w(e,{onClick:D(la)},{default:S((()=>t[3]||(t[3]=[L("清空扫描日志")]))),_:1},8,["onClick"])])),content:S((()=>[w(D(f),{"max-height":D(l)-426},null,8,["max-height"])])),"footer-right":S((()=>[w(D(b))])),_:1}),t[5]||(t[5]=q("ul",{class:"mt-8px leading-8 text-[1.2rem] list-disc ml-20px"},[q("li",null,[L(" 日志安全分析：扫描网站(.log)日志中含有攻击类型的请求(类型包含： "),q("span",{class:"text-danger"},"xss,sql,san,php"),L(" ) ")]),q("li",null,"分析的日志数据包含已拦截的请求"),q("li",null,"如日志文件过大，扫描可能等待时间较长，请耐心等待")],-1)),w(r,{modelValue:D(v),"onUpdate:modelValue":t[0]||(t[0]=a=>T(v)?v.value=a:null),area:40},{default:S((()=>[q("div",ga,[q("div",ma,[q("div",da,[t[4]||(t[4]=q("div",{class:"download-speed-top-title"},"正在扫描中，扫描进度...",-1)),q("div",ha,C(D(y))+"%",1)]),w(n,{strokeWidth:5,percentage:D(y),showText:!1},null,8,["percentage"])])])])),_:1},8,["modelValue"])])}}}),[["__scopeId","data-v-3277a99b"]]);export{va as A,U as L,ia as r,ca as s,ua as t,H as u};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
