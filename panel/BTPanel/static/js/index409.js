import{ah as l,c as t,aa as n,e}from"./utils-lib.js?v=1734676359";import{c as a,r as u,w as d,o,B as s,k as r,l as i,p as c,q as m,y as p,e as b,x as v,C as h,J as y,v as C,I as g,aX as x,M as f,ay as U,z as T}from"./base-lib.js?v=1734676359";import{getJmxStatus as w}from"./site.js?v=1734676359";import{u as _,S as j}from"./useStore7.js?v=1734676359";import"./__commonjsHelpers__.js?v=1734676359";const M={class:"h-full"},P={key:0,class:"bg-[#7F7F7F] flex items-center justify-center h-full min-h-[60rem]"},k={class:"bg-white px-[48px] py-[16px] text-[#333] flex items-center"},S={key:1,class:"bg-[#7F7F7F] flex items-center justify-center h-full min-h-[60rem]"},F={class:"bg-white px-[48px] py-[16px] text-[#333] flex items-center"},L={id:"tab_table",class:"divtable jvm_table"},N={class:"table table-hover table-bordered !mb-2rem"},V={class:"table table-hover table-bordered !mb-2rem"},I={class:"table table-hover table-bordered"},G={id:"tab_table2",class:"divtable"},z={class:"table table-hover table-bordered !mb-2rem"},H={colspan:"3",style:{"text-align":"center"}},J={style:{width:"200px"}},O={id:"tab_table3",class:"divtable"},D={class:"table table-hover table-bordered w-full"},B={rowspan:"9",width:"145"},E={rowspan:"5",width:"145"},q={id:"tab_table4",class:"divtable"},A={class:"table table-hover table-bordered"},R={class:"table table-hover table-bordered mt-2rem"},X={class:"table table-hover table-bordered mt-2rem"},K={key:3,class:"bg-[#7F7F7F] flex items-center justify-center h-full min-h-[60rem]"},Q={class:"bg-white px-[48px] py-[16px] text-[#333] flex items-center"},W=e(a({__name:"index",props:{compData:{default:{}}},setup(e,{expose:a}){const{siteInfo:W}=_(),{jumpTabEvent:Y}=j(),Z=u(null!==W.value.pid),$=u(W.value.project_config.jmx_status),ll=u(!1),tl=u("system"),nl=u({}),el=u({}),al=u({}),ul=u({}),dl=u({}),ol=u({}),sl=u({}),rl=u([]),il=u([]),cl=u(""),ml=async()=>{try{ll.value=!0;const l=await w({project_name:W.value.name});if(ll.value=!1,!l.status)return cl.value=l.msg;l.status&&l.data&&(cl.value="",nl.value=l.data.OperatingSystem,el.value=l.data.ClassLoading,al.value=l.data.Runtime,ul.value=l.data.Threading,dl.value=l.data.Compilation,ol.value=l.data.BufferPool,sl.value=l.data.Memory,rl.value=l.data.MemoryPool,il.value=l.data.GarbageCollector)}catch(t){l(t)}};d((()=>W.value),(l=>{var t,n,e;Z.value=null!==(null==(t=W.value)?void 0:t.pid),$.value=null==(e=null==(n=W.value)?void 0:n.project_config)?void 0:e.jmx_status}),{immediate:!0});return o((()=>{Z.value&&ml()})),a({init:ml}),(l,e)=>{const a=t,u=U,d=n,o=s("bt-loading");return r(),i("div",M,[c(Z)?c($)?c(cl)?(r(),i("div",K,[m("div",Q,C(c(cl)),1)])):h((r(),y(d,{key:2,modelValue:c(tl),"onUpdate:modelValue":e[2]||(e[2]=l=>f(tl)?tl.value=l:null),type:"card"},{default:v((()=>[b(u,{name:"system",label:"系统情况",class:"overflow-auto max-h-[62rem]"},{default:v((()=>[m("div",L,[m("table",N,[e[17]||(e[17]=m("thead",null,[m("th",{colspan:"2",style:{"text-align":"center"}},"系统使用情况")],-1)),m("tbody",null,[m("tr",null,[e[9]||(e[9]=m("td",null,"当前打开的文件描述符数量",-1)),m("td",null,C(c(nl).OpenFileDescriptorCount),1)]),m("tr",null,[e[10]||(e[10]=m("td",null,"最大文件描述符数量",-1)),m("td",null,C(c(nl).MaxFileDescriptorCount),1)]),m("tr",null,[e[11]||(e[11]=m("td",null,"进程CPU时间",-1)),m("td",null,C(c(nl).ProcessCpuTime),1)]),m("tr",null,[e[12]||(e[12]=m("td",null,"可用的物理内存大小",-1)),m("td",null,C(c(nl).FreePhysicalMemorySize),1)]),m("tr",null,[e[13]||(e[13]=m("td",null,"总物理内存大小",-1)),m("td",null,C(c(nl).TotalPhysicalMemorySize),1)]),m("tr",null,[e[14]||(e[14]=m("td",null,"系统 CPU 负载(CPU 使用率)",-1)),m("td",null,C(c(nl).SystemCpuLoad),1)]),m("tr",null,[e[15]||(e[15]=m("td",null,"进程 CPU 负载",-1)),m("td",null,C(c(nl).ProcessCpuLoad),1)]),m("tr",null,[e[16]||(e[16]=m("td",null,"系统负载平均值",-1)),m("td",null,C(c(nl).SystemLoadAverage),1)])])]),m("table",V,[e[24]||(e[24]=m("thead",null,[m("th",{colspan:"2",style:{"text-align":"center"}},"运行信息")],-1)),m("tbody",null,[m("tr",null,[e[18]||(e[18]=m("td",null,"JVM 实例的启动时间",-1)),m("td",null,C(c(al).StartTime),1)]),m("tr",null,[e[19]||(e[19]=m("td",null,"是否支持引导类路径",-1)),m("td",null,C(c(al).BootClassPathSupported),1)]),m("tr",null,[e[20]||(e[20]=m("td",null,"JVM 运行时间",-1)),m("td",null,C(c(al).Uptime),1)]),m("tr",null,[e[21]||(e[21]=m("td",null,"系统属性",-1)),m("td",null,C(c(al).SystemProperties),1)]),m("tr",null,[e[22]||(e[22]=m("td",null,"JVM 实例的名称",-1)),m("td",null,C(c(al).Name),1)]),m("tr",null,[e[23]||(e[23]=m("td",null,"JVM 类路径",-1)),m("td",null,C(c(al).ClassPath),1)])])]),m("table",I,[e[31]||(e[31]=m("thead",null,[m("th",{colspan:"2",style:{"text-align":"center"}},"线程信息")],-1)),m("tbody",null,[m("tr",null,[e[25]||(e[25]=m("td",null,"峰值线程数",-1)),m("td",null,C(c(ul).PeakThreadCount),1)]),m("tr",null,[e[26]||(e[26]=m("td",null,"守护线程数",-1)),m("td",null,C(c(ul).DaemonThreadCount),1)]),m("tr",null,[e[27]||(e[27]=m("td",null,"线程数",-1)),m("td",null,C(c(ul).ThreadCount),1)]),m("tr",null,[e[28]||(e[28]=m("td",null,"启动的线程总数",-1)),m("td",null,C(c(ul).TotalStartedThreadCount),1)]),m("tr",null,[e[29]||(e[29]=m("td",null,"当前线程的 CPU 时间",-1)),m("td",null,C(c(ul).CurrentThreadCpuTime),1)]),m("tr",null,[e[30]||(e[30]=m("td",null,"当前线程的用户时间",-1)),m("td",null,C(c(ul).CurrentThreadUserTime),1)])])])])])),_:1}),b(u,{name:"mem",label:"内存情况",class:"overflow-auto max-h-[62rem]"},{default:v((()=>{var l,t,n,a,u;return[m("div",G,[m("table",z,[e[41]||(e[41]=m("thead",null,[m("th",{colspan:"3",style:{"text-align":"center"}},"（内存）使用情况的信息")],-1)),m("tbody",null,[m("tr",null,[e[32]||(e[32]=m("td",{rowspan:"3"},"堆内存使用情况",-1)),e[33]||(e[33]=m("td",null,"最大可用的堆内存大小",-1)),m("td",null,C(null==(l=c(sl).HeapMemoryUsage)?void 0:l.max),1)]),m("tr",null,[e[34]||(e[34]=m("td",null,"已使用内存",-1)),m("td",null,C(null==(t=c(sl).HeapMemoryUsage)?void 0:t.used),1)]),m("tr",null,[e[35]||(e[35]=m("td",null,"初始内存",-1)),m("td",null,C(null==(n=c(sl).HeapMemoryUsage)?void 0:n.init),1)]),m("tr",null,[e[36]||(e[36]=m("td",{colspan:"2"},"当前处于 finalization 队列中等待 finalization 的对象数量",-1)),m("td",null,C(c(sl).ObjectPendingFinalizationCount),1)]),m("tr",null,[e[37]||(e[37]=m("td",{colspan:"2"},"是否启用详细模式",-1)),m("td",null,C(c(sl).Verbose),1)]),m("tr",null,[e[38]||(e[38]=m("td",{rowspan:"2"},"非堆内存使用情况",-1)),e[39]||(e[39]=m("td",null,"最大可用的堆内存大小",-1)),m("td",null,C(null==(a=c(sl).NonHeapMemoryUsage)?void 0:a.max),1)]),m("tr",null,[e[40]||(e[40]=m("td",null,"已使用内存",-1)),m("td",null,C(null==(u=c(sl).NonHeapMemoryUsage)?void 0:u.used),1)])]),e[42]||(e[42]=m("tbody",null,null,-1))]),(r(!0),i(g,null,x(c(rl),((l,t)=>{var n,a,u,d,o,s;return r(),i("table",{key:t,class:"table table-hover table-bordered !mb-2rem"},[m("thead",null,[m("th",H,C(l.name),1)]),m("tbody",null,[m("tr",null,[e[43]||(e[43]=m("td",{colspan:"2"},"内存管理器名称列表",-1)),m("td",null,C(l.MemoryManagerNames),1)]),m("tr",null,[e[44]||(e[44]=m("td",{colspan:"2"},"使用阈值",-1)),m("td",null,C(l.UsageThreshold),1)]),m("tr",null,[e[45]||(e[45]=m("td",{colspan:"2"},"是否超过使用阈值",-1)),m("td",null,C(l.UsageThresholdExceeded),1)]),m("tr",null,[e[46]||(e[46]=m("td",{colspan:"2"},"超过使用阈值��次数",-1)),m("td",null,C(l.UsageThresholdCount),1)]),m("tr",null,[e[47]||(e[47]=m("td",{colspan:"2"},"是否支持使用阈值",-1)),m("td",null,C(l.UsageThresholdSupported),1)]),m("tr",null,[e[48]||(e[48]=m("td",{colspan:"2"},"收集使用阈值",-1)),m("td",null,C(l.CollectionUsageThreshold),1)]),m("tr",null,[e[49]||(e[49]=m("td",{colspan:"2"},"是否超过收集使用阈值",-1)),m("td",null,C(l.CollectionUsageThresholdExceeded),1)]),m("tr",null,[e[50]||(e[50]=m("td",{colspan:"2"},"超过收集使用阈值的次数",-1)),m("td",null,C(l.CollectionUsageThresholdCount),1)]),m("tr",null,[e[51]||(e[51]=m("td",{colspan:"2"},"MemoryPool是否有效",-1)),m("td",null,C(l.CollectionUsageThresholdSupported),1)]),m("tr",null,[e[52]||(e[52]=m("td",{colspan:"2"},"是否支持收集使用阈值",-1)),m("td",null,C(l.Valid),1)]),m("tr",null,[e[53]||(e[53]=m("td",{colspan:"2"},"名称",-1)),m("td",null,C(l.Name),1)]),m("tr",null,[e[54]||(e[54]=m("td",{colspan:"2"},"内存池类型",-1)),m("td",null,C(l.Type),1)]),m("tr",null,[e[55]||(e[55]=m("td",{colspan:"2"},"ObjectName",-1)),m("td",null,[m("span",J,C(l.ObjectName),1)])]),m("tr",null,[e[56]||(e[56]=m("td",{width:"120",rowspan:"3"},"使用情况",-1)),e[57]||(e[57]=m("td",null,"最大可用内存",-1)),m("td",null,C(null==(n=l.Usage)?void 0:n.max),1)]),m("tr",null,[e[58]||(e[58]=m("td",null,"已使用内存",-1)),m("td",null,C(null==(a=l.Usage)?void 0:a.used),1)]),m("tr",null,[e[59]||(e[59]=m("td",null,"初始内存大小",-1)),m("td",null,C(null==(u=l.Usage)?void 0:u.init),1)]),m("tr",null,[e[60]||(e[60]=m("td",{width:"120",rowspan:"3"},"PeakUsage",-1)),e[61]||(e[61]=m("td",null,"最大可用内存",-1)),m("td",null,C(null==(d=l.PeakUsage)?void 0:d.max),1)]),m("tr",null,[e[62]||(e[62]=m("td",null,"已使用内存",-1)),m("td",null,C(null==(o=l.PeakUsage)?void 0:o.used),1)]),m("tr",null,[e[63]||(e[63]=m("td",null,"初始内存大小",-1)),m("td",null,C(null==(s=l.PeakUsage)?void 0:s.init),1)]),"无"!==l.CollectionUsage?(r(),i(g,{key:0},[m("tr",null,[e[64]||(e[64]=m("td",{width:"120",rowspan:"3"},"CollectionUsage",-1)),e[65]||(e[65]=m("td",null,"最大可用内存",-1)),m("td",null,C(l.CollectionUsage.max),1)]),m("tr",null,[e[66]||(e[66]=m("td",null,"已使用内存",-1)),m("td",null,C(l.CollectionUsage.used),1)]),m("tr",null,[e[67]||(e[67]=m("td",null,"初始内存大小",-1)),m("td",null,C(l.CollectionUsage.init),1)])],64)):T("",!0)]),e[68]||(e[68]=m("tbody",null,null,-1))])})),128))])]})),_:1}),b(u,{name:"recycle",label:"垃圾回收"},{default:v((()=>[m("div",O,[m("table",D,[e[84]||(e[84]=m("thead",null,[m("th",{colspan:"5",style:{"text-align":"center"}},"垃圾回收处理信息")],-1)),m("tbody",null,[(r(!0),i(g,null,x(c(il),((l,t)=>(r(),i(g,null,["无"!==l.LastGcInfo?(r(),i(g,{key:0},[(r(),i("tr",{key:t},[m("td",B,C(l.name),1),e[69]||(e[69]=m("td",{rowspan:"5"},"最近的垃圾回收信息",-1)),e[70]||(e[70]=m("td",null,"垃圾回收线程数",-1)),m("td",null,C(l.LastGcInfo.GcThreadCount),1)])),m("tr",null,[e[71]||(e[71]=m("td",null,"回收持续时间",-1)),m("td",null,C(l.LastGcInfo.duration),1)]),m("tr",null,[e[72]||(e[72]=m("td",null,"结束时间",-1)),m("td",null,C(l.LastGcInfo.endTime),1)]),m("tr",null,[e[73]||(e[73]=m("td",null,"开始时间",-1)),m("td",null,C(l.LastGcInfo.startTime),1)]),m("tr",null,[e[74]||(e[74]=m("td",null,"数据库id",-1)),m("td",null,C(l.LastGcInfo.id),1)]),m("tr",null,[e[75]||(e[75]=m("td",{colspan:"2"},"回收次数",-1)),m("td",null,C(l.CollectionCount),1)]),m("tr",null,[e[76]||(e[76]=m("td",{colspan:"2"},"回收时间",-1)),m("td",null,C(l.CollectionTime),1)]),m("tr",null,[e[77]||(e[77]=m("td",{colspan:"2"},"是否有效",-1)),m("td",null,C(l.Valid),1)]),m("tr",null,[e[78]||(e[78]=m("td",{colspan:"2"},"垃圾收集器名称",-1)),m("td",null,C(l.Name),1)])],64)):(r(),i(g,{key:1},[m("tr",null,[m("td",E,C(l.name),1),e[79]||(e[79]=m("td",{colspan:"2"},"最近的垃圾回收信息",-1)),m("td",null,C(l.LastGcInfo),1)]),m("tr",null,[e[80]||(e[80]=m("td",{colspan:"2"},"回收次数",-1)),m("td",null,C(l.CollectionCount),1)]),m("tr",null,[e[81]||(e[81]=m("td",{colspan:"2"},"回收时间",-1)),m("td",null,C(l.CollectionTime),1)]),m("tr",null,[e[82]||(e[82]=m("td",{colspan:"2"},"是否有效",-1)),m("td",null,C(l.Valid),1)]),m("tr",null,[e[83]||(e[83]=m("td",{colspan:"2"},"垃圾收集器名称",-1)),m("td",null,C(l.Name),1)])],64))],64)))),256))])])])])),_:1}),b(u,{name:"other",label:"其他"},{default:v((()=>{var l,t,n,a,u,d,o,s;return[m("div",q,[m("table",A,[e[89]||(e[89]=m("thead",null,[m("th",{colspan:"2",style:{"text-align":"center"}},"类加载器信息")],-1)),m("tbody",null,[m("tr",null,[e[85]||(e[85]=m("td",null,"总加载类数",-1)),m("td",null,C(c(el).TotalLoadedClassCount),1)]),m("tr",null,[e[86]||(e[86]=m("td",null,"当前加载的类数",-1)),m("td",null,C(c(el).LoadedClassCount),1)]),m("tr",null,[e[87]||(e[87]=m("td",null,"已卸载的类数",-1)),m("td",null,C(c(el).UnloadedClassCount),1)]),m("tr",null,[e[88]||(e[88]=m("td",null,"是否启用了类加载的详细输出",-1)),m("td",null,C(c(el).Verbose),1)])])]),m("table",R,[e[93]||(e[93]=m("thead",null,[m("th",{colspan:"2",style:{"text-align":"center"}},"编译器信息")],-1)),m("tbody",null,[m("tr",null,[e[90]||(e[90]=m("td",null,"总编译时间",-1)),m("td",null,C(c(dl).TotalCompilationTime),1)]),m("tr",null,[e[91]||(e[91]=m("td",null,"是否支持编译时间监控",-1)),m("td",null,C(c(dl).CompilationTimeMonitoringSupported),1)]),m("tr",null,[e[92]||(e[92]=m("td",null,"编译器名称",-1)),m("td",null,C(c(dl).Name),1)])])]),m("table",X,[e[104]||(e[104]=m("thead",null,[m("th",{colspan:"3",style:{"text-align":"center"}},"缓冲池息")],-1)),m("tbody",null,[m("tr",null,[e[94]||(e[94]=m("td",{width:"120",rowspan:"4"},"映射缓冲池的信息",-1)),e[95]||(e[95]=m("td",null,"总容量",-1)),m("td",null,C(null==(l=c(ol).mapped)?void 0:l.TotalCapacity),1)]),m("tr",null,[e[96]||(e[96]=m("td",null,"已使用内存",-1)),m("td",null,C(null==(t=c(ol).mapped)?void 0:t.MemoryUsed),1)]),m("tr",null,[e[97]||(e[97]=m("td",null,"名称",-1)),m("td",null,C(null==(n=c(ol).mapped)?void 0:n.Name),1)]),m("tr",null,[e[98]||(e[98]=m("td",null,"缓冲区数量",-1)),m("td",null,C(null==(a=c(ol).mapped)?void 0:a.Count),1)]),m("tr",null,[e[99]||(e[99]=m("td",{rowspan:"4",width:"120"},"总容量",-1)),e[100]||(e[100]=m("td",null,"总容量",-1)),m("td",null,C(null==(u=c(ol).direct)?void 0:u.TotalCapacity),1)]),m("tr",null,[e[101]||(e[101]=m("td",null,"已使用内存",-1)),m("td",null,C(null==(d=c(ol).direct)?void 0:d.MemoryUsed),1)]),m("tr",null,[e[102]||(e[102]=m("td",null,"名称",-1)),m("td",null,C(null==(o=c(ol).direct)?void 0:o.Name),1)]),m("tr",null,[e[103]||(e[103]=m("td",null,"缓冲区数量",-1)),m("td",null,C(null==(s=c(ol).direct)?void 0:s.Count),1)])])])])]})),_:1})])),_:1},8,["modelValue"])),[[o,c(ll)]]):(r(),i("div",S,[m("div",F,[e[7]||(e[7]=p("请开启 ")),b(a,{class:"mx-4px",onClick:e[1]||(e[1]=l=>c(Y)("project"))},{default:v((()=>e[6]||(e[6]=[p("jmx监控")]))),_:1}),e[8]||(e[8]=p(" 后查看性能信息"))])])):(r(),i("div",P,[m("div",k,[e[4]||(e[4]=p("请开启 ")),b(a,{class:"mx-4px",onClick:e[0]||(e[0]=l=>c(Y)("state"))},{default:v((()=>e[3]||(e[3]=[p("项目状态")]))),_:1}),e[5]||(e[5]=p(" 后查看性能信息"))])]))])}}}),[["__scopeId","data-v-62058cb3"]]);export{W as default};
