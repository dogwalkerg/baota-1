import{u as e,aa as a,H as r}from"./utils-lib.js?v=1734676359";import{p as t}from"./validator.js?v=1734676359";import{c as l,i as m,r as s,k as o,J as i,p as n,M as _,d as p,e as u}from"./base-lib.js?v=1734676359";import"./__commonjsHelpers__.js?v=1734676359";import"./index91.js?v=1734676359";import"./column.js?v=1734676359";const d=l({__name:"index",props:{compData:{default:"route"}},setup(l){const d=l,{payment:c}=e(),E=m((()=>c.value.authType)),j=e=>"ltd"===E.value||"audit"!==e||(t({sourceId:340}),!1),x=s((j(d.compData)?d.compData:"route")||"route"),b=[{label:"数据库备份",name:"route",lazy:!0,render:()=>p((()=>r((()=>import("./index357.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)))},{label:"企业增量备份",name:"increment",render:()=>p((()=>r((()=>import("./index358.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)))},{label:"MySQL用户管理",lazy:!0,name:"user",render:()=>p((()=>r((()=>import("./index359.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)))},{label:"敏感词检测",lazy:!0,name:"sensitive",render:()=>p((()=>r((()=>import("./index360.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)))},{label:"关联服务",lazy:!0,name:"service",render:()=>p((()=>r((()=>import("./index361.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)))},{label:"Mysql守护进程",lazy:!0,name:"process",render:()=>p((()=>r((()=>import("./index362.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)))},{label:"等保加固",lazy:!0,name:"reinforce",render:()=>p((()=>r((()=>import("./index363.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)))},{label:()=>u("span",{class:"flex items-center"},[u("i",{class:"!mr-0 svgtofont-icon-ltd !text-[2rem] text-[#9B7E48]"},null),"日志审计"]),lazy:!0,name:"audit",render:()=>p((()=>r((()=>import("./index364.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)))}];return(e,r)=>{const t=a;return o(),i(t,{class:"w-full h-full",type:"left-bg-card",modelValue:n(x),"onUpdate:modelValue":r[0]||(r[0]=e=>_(x)?x.value=e:null),options:b,beforeLeave:j},null,8,["modelValue"])}}});export{d as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
