import{G as t,l as e,H as a,o as s,ah as r,bR as n,b as o,al as l,bX as i,an as p,O as c}from"./utils-lib.js?v=1734676359";import{_ as u}from"./index90.js?v=1734676359";import{r as _,e as m,y,h as d,I as h,aN as g,c as x,k as b,l as w,x as v,p as k}from"./base-lib.js?v=1734676359";import{u as f,a as q,c as E,g as L}from"./column.js?v=1734676359";import{getProxyUrlData as j,editProxyUrlDataRemark as T,delProxyUrlData as z,addProxyUrlData as N,editProxyUrlInfo as R,setProxyUrlCustom as A,addProxyUrlReplace as I,proxyUrlCache as P,proxyUrlCompress as U,proxyUrlAddLimit as $,delProxyUrlReplace as C,proxyUrlBatchDelLimit as O,proxyUrlDelLimit as D}from"./site.js?v=1734676359";import{f as B}from"./validator.js?v=1734676359";import{u as S}from"./useStore7.js?v=1734676359";const V=o(),{siteInfo:X}=S(),W=_({}),H=_(!1),M=[{content:"支持添加多个不同目录的代理"},{content:"如添加后访问异常请尝试清理浏览器缓存"}],G=async()=>{try{const e=await t({request:j({site_name:X.value.name}),data:{data:Array}});return Array.isArray(e.data)?{data:e.data,total:e.data.length}:{data:[],total:0}}catch(e){return{data:[],total:0}}},Z=()=>{e({isAsync:!0,title:"添加URL代理",area:60,btn:"确认",component:()=>a((()=>import("./add-url-proxy2.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)})},F=async(e,a)=>{t({loading:"正在修改URL代理备注，请稍后...",request:T({site_name:X.value.name,proxy_path:e.proxy_path,remark:a}),message:!0})},J=t=>{W.value=t,e({isAsync:!0,title:"URL代理设置【".concat(t.proxy_path,"】"),area:[76,60],component:()=>a((()=>import("./setting2.js?v=1734676359")),__vite__mapDeps([]),import.meta.url),compData:{row:t}})},K=async e=>{if("/"===e.proxy_path)return void V.error("根目录不能删除");await s({title:"删除反向代理【".concat(e.proxy_path,"】"),width:"35rem",icon:"warning-filled",content:"您真的要删除反向代理【".concat(e.proxy_path,"】吗？")});(await t({loading:"正在删除，请稍后...",request:z({site_name:X.value.name,proxy_path:e.proxy_path}),message:!0})).status&&(H.value=!0)},Q=[{content:"目标：可以填写你需要代理的站点，目标如果选URL地址则必须为可正常访问的URL，如果选UNIX则必须是套接字文件"},{content:"http地址示例：http://127.0.0.1:15700"},{content:"unix地址示例：/tmp/panel.sock"},{content:()=>m("span",null,[y("发送域名：将域名添加到请求头传递到后端服务器，默认为目标URL域名，若设置不当可能导致代理无法正常访问，例如："),m("br",null,null),y("http://192.168.100.20:19888，则发送域名保持$http_host即可"),m("br",null,null),y("http://www.bt.cn，则发送域名应当改为www.bt.cn"),m("br",null,null),y("上面例子仅为常见情况，请以实际为准")])}],Y=[{label:"URL地址",value:"http"},{label:"UNIX地址",value:"unix"}],tt=d({targetType:"http",sitename:"",cachetime:1,proxysite:"http://",todomain:"$http_host",path:"",ps:"",websocket:!1}),et=_(!1),at=_(!1),st=_(!1),rt=_(),nt=d({proxyname:[{required:!0,message:"请输入代理名称",trigger:"blur"},{validator:(t,e,a)=>{e.length<3?a(new Error("代理名称必须大于3个字符串")):e.match(/^[a-zA-Z0-9_.-]+$/g)?a():a(new Error("代理名称不能包含特殊字符"))}}],proxysite:[{required:!0,message:"请输入目标地址",trigger:"blur"},{validator:(t,e,a)=>{if(!e)return void a(new Error("http"===tt.targetType?"目标地址不能为空":"请选择sock文件"));if("unix"===tt.targetType)return void a();let s=e.replace(/^http[s]?:\/\//,"");s=s.replace(/(:|\?|\/|\\)(.*)$/,""),/^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/.test(s)?tt.todomain="$http_host":tt.todomain=s,a()}},{}],todomain:[{required:!0,message:"请输入发送域名",trigger:["blur","change"]}],path:[{required:!0,message:"请输入根目录",trigger:"blur"}]}),ot=async()=>{tt.proxysite="http"===tt.targetType?"http://":""},lt=t=>{if("unix"===tt.targetType)return void(tt.todomain="$http_host");let e=t.replace(/^http[s]?:\/\//,"");e=e.replace(/(:|\?|\/|\\)(.*)$/,""),tt.todomain=e},it=()=>{B({type:"file",path:tt.proxysite,change:t=>{tt.proxysite=t}})},pt=async()=>{const{path:e,proxysite:a,todomain:s,targetType:r,ps:n}=tt;let o={site_name:X.value.name,proxy_path:e,proxy_pass:a,proxy_host:s,proxy_type:r,remark:n};await rt.value.validate();const l=await t({loading:st,request:N(o),message:!0});return l.status&&(H.value=!0),l.status},ct=_("proxy"),ut=_({proxy_type:"",proxy_path:"",proxy_pass:"",proxy_host:"$http_host",ip_limit:{},basic_auth:{},proxy_cache:{},gzip:{},sub_filter:{},websocket:{},proxy_log:{},custom_config:[],proxy_conf:"",remark:"",template_proxy_conf:""}),_t=async()=>{try{const t=await j({site_name:X.value.name,proxy_path:W.value.proxy_path});if(!t.status)return void V.error(t.msg);ut.value=t.data.data}catch(t){r(t)}},mt=_(!1),yt=d({targetType:"http",sitename:"",proxysite:"",todomain:"$http_host",path:"",ps:"",websocket:!1,proxy_connect_timeout:30,proxy_send_timeout:30,proxy_read_timeout:30}),dt=d({proxysite:[{required:!0,message:"请输入目标url",trigger:"blur",validator:(t,e,a)=>{e?a():a(new Error("目标URL不能为空"))}}],todomain:[{required:!0,message:"请输入发送域名",trigger:["blur","change"]}],proxy_connect_timeout:[{required:!0,message:"请输入连接超时时间",trigger:["blur","change"],validator:(t,e,a)=>{e?isNaN(Number(e))?a(new Error("请输入数字")):a():a(new Error("连接超时时间不能为空"))}}],proxy_send_timeout:[{required:!0,message:"请输入后端请求超时时间",trigger:["blur","change"],validator:(t,e,a)=>{e?isNaN(Number(e))?a(new Error("请输入数字")):a():a(new Error("后端请求超时时间不能为空"))}}],proxy_read_timeout:[{required:!0,message:"请输入代理响应超时时间",trigger:["blur","change"],validator:(t,e,a)=>{e?isNaN(Number(e))?a(new Error("请输入数字")):a():a(new Error("代理响应超时时间不能为空"))}}]}),ht=t=>{const{proxy_type:e,proxy_pass:a,proxy_host:s,proxy_path:r,remark:n,global_websocket:o,websocket:l,timeout:i}=t;yt.targetType=e,yt.proxysite=a,yt.todomain=s,yt.path=r,yt.ps=n,mt.value=o,yt.websocket=null==l?void 0:l.websocket_status,yt.proxy_connect_timeout=null==i?void 0:i.proxy_connect_timeout,yt.proxy_send_timeout=null==i?void 0:i.proxy_send_timeout,yt.proxy_read_timeout=null==i?void 0:i.proxy_read_timeout},gt=async()=>{const{path:e,proxysite:a,todomain:s,targetType:r,ps:n,websocket:o,proxy_connect_timeout:l,proxy_send_timeout:i,proxy_read_timeout:p}=yt,c={site_name:X.value.name,proxy_path:e,proxy_pass:a,proxy_host:s,proxy_type:r,remark:n,websocket:o?1:0,proxy_connect_timeout:l,proxy_send_timeout:i,proxy_read_timeout:p};await rt.value.validate();return(await t({loading:st,request:R(c),message:!0})).status},xt='一行一条配置，请以;结尾，例如：\nproxy_set_header Cookie "cookie_name=cookie_value";\nallow 192.168.1.0/24;\naccess_log /www/wwwlogs/xxx.log;',bt=d({config:""}),wt=[{content:"注意：一行一条配置，请以;结尾"},{content:()=>m(h,null,[y("案例："),m("br",null,null),y("重定向请求：return 301 /new-page;"),m("br",null,null),y("重写URL：rewrite ^/blog/(.*)$ /$1 break;"),m("br",null,null),y("文件上传限制：client_max_body_size 10M;"),m("br",null,null),y("处理特定http方法："),m("br",null,null),y("limit_except POST "),"{",y(" "),m("br",null,null),y("    allow 192.168.1.0/24;"),m("br",null,null),y("    deny all;"),m("br",null,null),"}",m("br",null,null),y("限制请求速率：limit_rate 100k;"),m("br",null,null)])},{content:"保存配置前请核对配置是否正确，错误的配置可能会导致反向代理无法正常访问"}],vt=async t=>{try{let t={site_name:X.value.name,proxy_path:ut.value.proxy_path,custom_conf:bt.config};const e=await A(t);return V.request(e),e.status}catch(e){}},kt=()=>{bt.config=ut.value.custom_conf||""},ft=d({subfilter:[]}),qt=[{content:"规则解释如下"},{content:"g：替换所有匹配到的关键字"},{content:"i：不区分大小写"},{content:"o：只替换匹配到的第一个"},{content:"r：使用正则表达式"}],Et=async e=>{await t({loading:"正在删除，请稍后...",request:C({site_name:X.value.name,proxy_path:ut.value.proxy_path,oldstr:e.oldstr,newstr:e.newstr}),message:!0}),_t()},Lt=t=>{const e=[t.oldstr,t.newstr],a=t.sub_type.replace(/g/g,""),s=a.includes("i")?"不区分大小写":"",r=a.includes("o")?"只替换第一个":"",n=a.includes("r")?"使用正则表达式":"";switch(a.length){case 0:return"效果:将全部'".concat(e[0],"'替换为'").concat(e[1],"''");case 1:return"效果:将".concat(r?"":"全部","'").concat(e[0],"'替换为'").concat(e[1],"'，匹配时").concat(s||r||n);case 2:return"效果:将".concat(r?"":"全部","'").concat(e[0],"'替换为'").concat(e[1],"'，匹配时").concat(s||r||n,"并且").concat(n||r||s);case 3:return"效果:将'".concat(e[0],"'替换为'").concat(e[1],"'，匹配时").concat(s,"、").concat(r,"并且").concat(n)}},jt=t=>{try{ft.subfilter=t.sub_filter_str}catch(e){}},Tt=_([{label:"原关键词",prop:"oldstr"},{label:"替换词",prop:"newstr"},{label:"规则",prop:"mode",width:50,render:t=>m(g,{class:"item",effect:"dark","open-delay":500,content:Lt(t),placement:"top-start"},{default:()=>[m("div",{class:"flex items-center"},["".concat(t.sub_type)])]})},f([{title:"删除",onClick:t=>{Et(t)}}])]),zt=()=>{Object.assign(Nt,{oldstr:"",newstr:""}),At.value=[],It.value="默认效果:将全部'http://www.bt.cn'替换为'https://www.bt.cn'",e({isAsync:!0,title:"添加内容替换【".concat(ut.value.proxy_path,"】"),area:60,btn:"确认",component:()=>a((()=>import("./setting-replace-add2.js?v=1734676359")),__vite__mapDeps([]),import.meta.url),compData:{proxy_path:ut.value.proxy_path,subs_filter:ut.value.subs_filter}})},Nt=d({oldstr:"",newstr:""}),Rt={oldstr:[n({message:"请输入原关键词"})]},At=_([]),It=_("默认效果:将全部'http://www.bt.cn'替换为'https://www.bt.cn'"),Pt=_(),Ut=t=>{$t(At.value)},$t=t=>{const e=t.includes("i")?"不区分大小写":"",a=t.includes("o")?"只替换第一个":"",s=t.includes("r")?"使用正则表达式":"";switch(t.length){case 0:It.value="默认效果:将全部".concat(Nt.oldstr,"替换为").concat(Nt.newstr);break;case 1:It.value="效果:将".concat(a?"":"全部").concat(Nt.oldstr,"替换为").concat(Nt.newstr,"，匹配时").concat(e||a||s);break;case 2:It.value="效果:将".concat(a?"":"全部").concat(Nt.oldstr,"替换为").concat(Nt.newstr,"，匹配时").concat(e||a||s,"并且").concat(s||a||e);break;case 3:It.value="效果:将".concat(Nt.oldstr,"替换为").concat(Nt.newstr,"，匹配时").concat(e,"、").concat(a,"并且").concat(s)}},Ct=async()=>{await Pt.value.validate();const e={site_name:X.value.name,oldstr:Nt.oldstr,newstr:Nt.newstr,proxy_path:ut.value.proxy_path,sub_type:At.value.length?At.value.join(""):"g"},a=await t({loading:st,request:I(e),message:!0});return a.status&&_t(),a.status},Ot=_(),Dt=d({status:!1,time:"",unit:"m"}),Bt=[{label:"分钟",value:"m"},{label:"小时",value:"h"},{label:"天",value:"d"}],St=[{content:"缓存是一种用于加速网站性能和提高用户体验的技术"},{content:"开启后资源会被缓存，如果影响网站访问请关闭"},{content:"缓存键由主机名、URI 和请求参数组成"},{content:"默认忽略的响应头有：Set-Cookie|Cache-Control|expires|X-Accel-Expires"},{content:"默认缓存的静态资源有：css|js|jpg|jpeg|gif|png|webp|woff|eot|ttf|svg|ico|css.map|js.map"}],Vt=t=>{Xt()},Xt=async()=>{const e={site_name:X.value.name,proxy_path:ut.value.proxy_path,cache_status:Dt.status?1:0,expires:"".concat(Dt.time).concat(Dt.unit)};await Ot.value.validate();return(await t({loading:st,request:P(e),message:!0})).status},Wt=_(),Ht=d({status:!1,type:"",level:1,minLength:"",unit:"m"}),Mt=[{label:"k",value:"k"},{label:"m",value:"m"}],Gt=[{content:"用于对 HTTP 响应的内容进行压缩，以减少数据传输量，提高网站性能和加载速度"},{content:"压缩级别1-9，例如：1为压缩速度最快，但压缩率较低；9为压缩速度最慢，但压缩率最高，建议默认"},{content:"如果开启gzip后影响网站正常访问，请关闭此功能 和请求参数组成"}],Zt={type:[{required:!0,message:"请输入压缩类型",trigger:["blur","change"]}],minLength:[{required:!0,message:"请输入正确的压缩最小长度",trigger:"blur",validator:(t,e,a)=>{e?isNaN(Number(e))?a(new Error("请输入数字")):Number(e)<1?a(new Error("请输入正确数字")):a():a(new Error("压缩最小长度不能为空"))}},{}]},Ft=t=>{Ht.status=t.gzip_status,Ht.type=t.gzip_types,Ht.level=t.gzip_comp_level;let e="",a="m";t.gzip_min_length&&t.gzip_min_length.length>1&&(e=t.gzip_min_length.slice(0,-1),a=t.gzip_min_length.slice(-1)),Ht.minLength=e,Ht.unit=a},Jt=t=>{Kt()},Kt=async()=>{const e={site_name:X.value.name,proxy_path:ut.value.proxy_path,gzip_status:Ht.status?1:0,gzip_min_length:"".concat(Ht.minLength).concat(Ht.unit),gzip_comp_level:Ht.level,gzip_types:Ht.type};await Wt.value.validate();return(await t({loading:st,request:U(e),message:!0})).status},Qt=_(),Yt=_(),te=d({loading:!1,type:"black",white:[],black:[]}),ee=t=>{te.white=t.ip_white.map((t=>({ip:t,type:"white"}))),te.black=t.ip_black.map((t=>({ip:t,type:"black"})))},ae=async e=>{const a=!!Array.isArray(e);await s({title:"".concat(a?"批量删除":"删除").concat("white"===te.type?"白":"黑","名单"),content:"".concat(a?"批量删除选中的ip，是否继续操作？":"删除".concat("white"===te.type?"白":"黑","名单【").concat(e.ip,"】，是否继续操作？"))});let r={site_name:X.value.name,proxy_path:ut.value.proxy_path};a?(r.ips=e.map((t=>t.ip)).join("\n"),r.ip_type=te.type):(r.ip=e.ip,r.ip_type=e.type);const n=a?O:D;(await t({loading:"正在删除，请稍后...",request:n(r),message:!0})).status&&_t()},se=_([q(),{label:"IP",prop:"ip",minWidth:120},f([{title:"删除",onClick:t=>{ae(t)}}])]),re=[{label:"删除IP",value:"delete",event:async(t,e,a,s,r)=>{const n=async t=>await D({site_name:X.value.name,proxy_path:ut.value.proxy_path,ip:t.ip,ip_type:"ipBlackList"===ct.value?"black":"white"});await t({title:"批量删除",content:"批量删除选中的ip，是否继续操作？",column:[{prop:"ip",label:"IP"},E()],onConfirm:async()=>(await e(n),_t(),!1)})}}],ne=()=>{te.type="ipBlackList"===ct.value?"black":"white",ee(ut.value.ip_limit)},oe=()=>{le.value.address="",e({isAsync:!0,title:"添加IP".concat("ipBlackList"===ct.value?"黑":"白","名单【").concat(ut.value.proxy_path,"】"),area:40,btn:"确认",component:()=>a((()=>import("./setting-ip-add2.js?v=1734676359")),__vite__mapDeps([]),import.meta.url),compData:{name:X.value.name,proxy_path:ut.value.proxy_path,listType:te.type,refreshEvent:()=>{_t()}}})},le=_({types:te.type,address:""}),ie=_(),pe=[{content:"一行一条配置，多个IP请换行"}],ce={address:[{validator:(t,e,a)=>{e.length>0?a():a(new Error("请输入IP地址"))},trigger:["blur","change"]}]},ue=async()=>{const{address:e}=le.value,a={site_name:X.value.name,proxy_path:ut.value.proxy_path,ip_type:"ipBlackList"===ct.value?"black":"white",ips:e};await ie.value.validate();const s=await t({loading:st,request:$(a),message:!0});return s.status&&_t(),s.status},_e=x({__name:"index",setup(t){const{BtOperation:e}=l({options:[{label:"添加URL代理",type:"button",active:!0,onClick:Z}]}),{BtTable:a}=i({request:G,columns:[{label:"代理目录",prop:"proxy_path",minWidth:120},{label:"目标",prop:"proxy_pass",minWidth:200},L({request:F,prop:"remark"}),f([{onClick:J,title:"设置"},{onClick:K,title:"删除"}])],extension:[p(H)]});return(t,s)=>{const r=u,n=c;return b(),w("div",null,[m(r,{class:"h-[59rem]"},{"header-left":v((()=>[m(k(e))])),content:v((()=>[m(k(a),{"max-height":560})])),_:1}),m(n,{class:"mt-[2rem] ml-[1.6rem]",options:k(M)},null,8,["options"])])}}}),me=Object.freeze(Object.defineProperty({__proto__:null,default:_e},Symbol.toStringTag,{value:"Module"}));export{Kt as $,ie as A,ce as B,ht as C,yt as D,mt as E,gt as F,dt as G,kt as H,bt as I,xt as J,vt as K,wt as L,zt as M,ft as N,Tt as O,qt as P,jt as Q,Dt as R,Vt as S,Bt as T,Xt as U,Ot as V,St as W,Ft as X,Ht as Y,Jt as Z,Mt as _,it as a,Wt as a0,Zt as a1,Gt as a2,Yt as a3,Qt as a4,oe as a5,ne as a6,te as a7,se as a8,re as a9,ee as aa,me as ab,rt as b,nt as c,st as d,Q as e,at as f,ct as g,lt as h,_t as i,Ct as j,Nt as k,Ut as l,ut as m,$t as n,pt as o,et as p,It as q,At as r,ot as s,Y as t,tt as u,Pt as v,Rt as w,ue as x,le as y,pe as z};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
