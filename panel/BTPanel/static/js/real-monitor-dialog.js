import{G as e,t,R as s,dj as l,e as a}from"./utils-lib.js?v=1734676359";import{c as i,r,h as o,o as n,n as c,aB as m,B as u,C as d,p,k as f,l as b,q as x,y as v,v as _,e as g}from"./base-lib.js?v=1734676359";import{a2 as h}from"./useStore3.js?v=1734676359";import"./__commonjsHelpers__.js?v=1734676359";const w={class:"flex flex-col p-[1.6rem] lib-box !h-full overflow-auto"},y={class:"card"},k={class:"con flex items-center"},B={class:"p-[1.5rem] text-[1.3rem] font-bold"},S={class:"font-normal text-[#919191]"},j={class:"p-[1.5rem] text-[1.3rem] font-bold"},C={class:"font-normal text-[#919191]"},I={class:"chartCon flex flex-wrap w-full justify-between"},M={class:"flex w-[49%]"},R={class:"card w-full flex-1 mb-[1rem]"},z={class:"chart w-full h-[30rem]"},A={class:"flex w-[49%]"},D={class:"card w-full flex-1 mb-[1rem]"},L={class:"chart w-full h-[30rem]"},N={class:"flex w-[49%]"},P={class:"card w-full flex-1 mb-[1rem]"},G={class:"chart w-full h-[30rem]"},K={class:"flex w-[49%]"},O={class:"card w-full flex-1 mb-[1rem]"},U={class:"chart w-full h-[30rem]"},q=a(i({__name:"real-monitor-dialog",props:{compData:{default:()=>({})}},setup(a){const i=a,q=r(),H=r(),J=r(),T=r(),E=r(!1),F=o({cpu_list:[],mem_list:{usage:[],cache:[]},disk_list:{read:[],write:[]},network_list:{tx:[],rx:[]},time_list:[],limit:"",top_limit:"",bottom_limit:""});let Q=null;const V=async s=>{let l=(new Date).getTime();const a=JSON.stringify({id:s.id,dk_status:s.status}),i=await e({request:h({data:a})}),r=i.data;if(!i.status)return!1;F.limit=t(r.limit),F.top_limit=t(r.tx_total),F.bottom_limit=t(r.rx_total),F.time_list.push(l),F.mem_list.usage.push([l,t(r.usage,!1,null,"MB")]),F.mem_list.cache.push([l,t(r.cache,!1,null,"MB")]),F.cpu_list.push([l,r.cpu_usage]),F.disk_list.read.push([l,t(r.read_total,!1,null,"MB")]),F.disk_list.write.push([l,t(r.write_total,!1,null,"MB")]),F.network_list.tx.push([l,t(r.tx,!1,null,"KB")]),F.network_list.rx.push([l,t(r.rx,!1,null,"KB")]);const o=W("cpu"),n=W("mem"),c=W("disk"),m=W("network");o.xAxis.data=F.time_list,o.series[0].data=F.cpu_list,n.series[0].data=F.mem_list.usage,n.series[1].data=F.mem_list.cache,c.series[0].data=F.disk_list.read,c.series[1].data=F.disk_list.write,m.series[0].data=F.network_list.tx,m.series[1].data=F.network_list.rx,Y.value=o,Z.value=n,$.value=c,ee.value=m,E.value=!1},W=e=>{let t="/MB";const l=X();switch(e){case"cpu":l.tooltip.formatter=function(e){const t=e[0];return s(t.data[0])+"<br>"+t.seriesName+": "+t.data[1]+"%"},l.yAxis.min=0,l.series=[{name:"CPU",type:"line",symbol:"none",smooth:!0,itemStyle:{normal:{color:"rgb(0, 153, 238)"}}}];break;case"network":t="/KB";case"mem":case"disk":const a={mem:["内存","缓存"],disk:["读取","写入"],network:["上行","下行"],color:[{mem:["rgb(185, 220, 253)","rgb(185, 220, 253,0.6)","rgb(185, 220, 253,0.3)","rgba(229,147,187)","rgba(229,147,187,0.6)","rgba(229,147,187,0.3)"],disk:["rgb(255, 70, 131)","rgb(255, 70, 131,0.6)","rgb(255, 70, 131,0.3)","rgba(46, 165, 186)","rgba(46, 165, 186,0.6)","rgba(46, 165, 186,0.3)"],network:["rgb(255, 140, 0)","rgb(255, 140, 0,0.6)","rgb(255, 140, 0,0.3)","rgb(30, 144, 255)","rgb(30, 144, 255,0.6)","rgb(30, 144, 255,0.3)"]}]};l.tooltip.formatter=function(e){const l=e[0].data[0],a=s(l/1e3);let i="";for(var r=0;r<e.length;r++)i+='<span style="display: inline-block; width: 10px; height: 10px; margin-rigth:10px; border-radius: 50%; background: '+e[r].color+';"></span>  '+e[r].seriesName+"：",i+=e[r].data[1]+t+(e.length-1!==r?"<br />":"");return"时间："+a+"<br />"+i},l.legend={top:"18px",data:a[e]},l.series=[{name:a[e][0],type:"line",symbol:"none",itemStyle:{normal:{color:a.color[0][e][0],areaStyle:{}}}},{name:a[e][1],type:"line",symbol:"none",itemStyle:{normal:{color:a.color[0][e][4],areaStyle:{}}}}]}return l},X=()=>({tooltip:{trigger:"axis",axisPointer:{type:"cross"}},grid:{x:50,y:50,x2:30,y2:30},xAxis:{type:"time",scale:!0,splitNumber:4,boundaryGap:!0,axisLine:{lineStyle:{color:"#666"}},axisLabel:{formatter:function(e){return s(e/1e3,"hh:mm:ss")}}},yAxis:{type:"value",boundaryGap:[0,"100%"],splitLine:{lineStyle:{color:"#ddd"}},axisLine:{lineStyle:{color:"#666"}}}}),Y=r(W("cpu")),Z=r(W("mem")),$=r(W("disk")),ee=r(W("network"));return n((()=>{E.value=!0,c((()=>{var e;e=i.compData.row,c((()=>{Y.value=W("cpu"),Z.value=W("mem"),$.value=W("disk"),ee.value=W("network"),V(e),q.value.chart.resize(),H.value.chart.resize(),J.value.chart.resize(),T.value.chart.resize()})),Q=setInterval((function(){V(i.compData.row)}),3e3)}))})),m((()=>{clearInterval(Q)})),(e,t)=>{const s=l,a=u("bt-loading");return d((f(),b("div",w,[x("div",y,[t[2]||(t[2]=x("div",{class:"title"},"基础信息",-1)),x("div",k,[x("div",B,[t[0]||(t[0]=v(" 内存限额：")),x("span",S,_(p(F).limit),1)]),x("div",j,[t[1]||(t[1]=v(" 流量情况：")),x("span",C," 上行："+_(p(F).top_limit)+" - 下行："+_(p(F).bottom_limit),1)])])]),x("div",I,[x("div",M,[x("div",R,[t[3]||(t[3]=x("div",{class:"title"},"CPU",-1)),x("div",z,[g(s,{ref_key:"CPURef",ref:q,options:p(Y)},null,8,["options"])])])]),x("div",A,[x("div",D,[t[4]||(t[4]=x("div",{class:"title"},"内存",-1)),x("div",L,[g(s,{ref_key:"memRef",ref:H,options:p(Z)},null,8,["options"])])])]),x("div",N,[x("div",P,[t[5]||(t[5]=x("div",{class:"title"},"磁盘IO",-1)),x("div",G,[g(s,{ref_key:"diskRef",ref:J,options:p($)},null,8,["options"])])])]),x("div",K,[x("div",O,[t[6]||(t[6]=x("div",{class:"title"},"网络IO",-1)),x("div",U,[g(s,{ref_key:"netRef",ref:T,options:p(ee)},null,8,["options"])])])])])])),[[a,p(E)],[a,"正在获取监控数据，请稍候...","title"]])}}}),[["__scopeId","data-v-9c0ac44e"]]);export{q as default};
