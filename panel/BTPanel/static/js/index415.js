import{o as e,G as a,l as t,H as s,v as i,b as r,X as l}from"./utils-lib.js?v=1734676359";import{r as n,h as o,c as p,w as c,o as u,k as m,J as _,p as g}from"./base-lib.js?v=1734676359";import{proxyGetGlobal as h,clearProxyCache as d,proxyGlobalCache as v,proxyGlobalCompress as b,proxyGlobalAddLimit as y,proxyGlobalEditBasic as w,proxyGlobalAddBasic as f,proxyGlobalSetLogs as k,proxyGlobalSetWebsocket as E,proxyGlobalDelBasic as L,proxyGlobalBatchDelLimit as j,proxyGlobalDelLimit as z}from"./site.js?v=1734676359";import{a as I,u as P,c as q}from"./column.js?v=1734676359";import{f as A}from"./validator.js?v=1734676359";import{u as T}from"./useStore7.js?v=1734676359";const x=r(),{siteInfo:R}=T(),D=n("cache"),O=n({site_name:"",domain_list:[],site_port:[],port_conf:"",ssl_port_conf:"",site_path:"",ssl_info:{},err_age_404:"",err_age_502:"",ip_limit:{ip_black:[],ip_white:[]},basic_auth:[],proxy_cache:{},gzip:{},sub_filter:{},websocket:{},security:{},redirect:{},proxy_log:{},http_block:"",server_block:"",remark:"",proxy_info:[]}),V=async()=>{const e=await h({site_name:R.value.name});e.status?O.value=e.data:x.error(e.msg)},N=n(!1),B=n(!1),C=n(),S=o({status:!1,time:"",unit:"m"}),U=[{label:"分钟",value:"m"},{label:"小时",value:"h"},{label:"天",value:"d"}],H=[{content:"缓存是一种用于加速网站性能和提高用户体验的技术"},{content:"开启后资源会被缓存，如果影响网站访问请关闭"},{content:"缓存键由主机名、URI 和请求参数组成"},{content:"默认忽略的响应头有：Set-Cookie|Cache-Control|expires|X-Accel-Expires"},{content:"默认缓存的静态资源有：css|js|jpg|jpeg|gif|png|webp|woff|eot|ttf|svg|ico|css.map|js.map"}],W={time:[{required:!0,message:"请输入正确的缓存时间",trigger:"blur",validator:(e,a,t)=>{a?isNaN(Number(a))?t(new Error("请输入数字")):Number(a)<1?t(new Error("请输入正确数字")):t():t(new Error("目标URL不能为空"))}},{}]},X=async()=>{await e({title:"清理缓存【".concat(R.value.name,"】"),width:"35rem",icon:"warning-filled",content:"清理后包含所有URL的及站点的缓存都会被清空,是否继续？"}),await a({loading:"正在清理缓存，请稍后...",request:d({site_name:R.value.name}),message:!0})},G=async()=>{let e={site_name:R.value.name,cache_status:S.status?1:0,expires:"".concat(S.time).concat(S.unit)};await C.value.validate(),await a({loading:B,request:v(e),message:!0})},J=n(),M=o({status:!1,type:"",level:1,minLength:"",unit:"m"}),F=[{label:"k",value:"k"},{label:"m",value:"m"}],K=[{content:"用于对 HTTP 响应的内容进行压缩，以减少数据传输量，提高网站性能和加载速度"},{content:"压缩级别1-9，例如：1为压缩速度最快，但压缩率较低；9为压缩速度最慢，但压缩率最高，建议默认"},{content:"如果开启gzip后影响网站正常访问，请关闭此功能 和请求参数组成"}],Q={type:[{required:!0,message:"请输入压缩类型",trigger:["blur","change"]}],minLength:[{required:!0,message:"请输入正确的压缩最小长度",trigger:"blur",validator:(e,a,t)=>{a?isNaN(Number(a))?t(new Error("请输入数字")):Number(a)<1?t(new Error("请输入正确数字")):t():t(new Error("压缩最小长度不能为空"))}},{}]},Y=e=>{M.status=e.gzip_status,M.type=e.gzip_types,M.level=e.gzip_comp_level;let a="",t="m";e.gzip_min_length&&e.gzip_min_length.length>1&&(a=e.gzip_min_length.slice(0,-1),t=e.gzip_min_length.slice(-1)),M.minLength=a,M.unit=t},Z=async()=>{const e={site_name:R.value.name,gzip_status:M.status?1:0,gzip_min_length:"".concat(M.minLength).concat(M.unit),gzip_comp_level:M.level,gzip_types:M.type};await J.value.validate();return(await a({loading:B,request:b(e),message:!0})).status},$=o({loading:!1,type:"black",white:[],black:[]}),ee=n(),ae=n(),te=e=>{$.type="ipBlackList"===D.value?"black":"white",$.white=e.ip_white.map((e=>({ip:e,type:"white"}))),$.black=e.ip_black.map((e=>({ip:e,type:"black"})))},se=async t=>{const s=!!Array.isArray(t);await e({title:"".concat(s?"批量删除IP":"删除".concat("white"===t.type?"白名单":"黑名单","【").concat(t.ip,"】")),content:s?"批量删除选中的IP，是否继续操作？":"删除".concat("white"===t.type?"白名单":"黑名单","【").concat(t.ip,"】，是否继续操作？")});let i={site_name:R.value.name};s?(i.ip_type="ipBlackList"===D.value?"black":"white",i.ips=t.map((e=>e.ip)).join("\n")):(i.ip_type=t.type,i.ip=t.ip);const r=s?j:z;(await a({loading:"正在删除，请稍后...",request:r(i),message:!0})).status&&V()},ie=n([I(),{label:"IP",prop:"ip",minWidth:120},P([{title:"删除",onClick:e=>{se(e)}}])]),re=[{label:"删除IP",value:"delete",event:async(e,a,t,s,i)=>{const r=async e=>await z({site_name:R.value.name,ip:e.ip,ip_type:"ipBlackList"===D.value?"black":"white"});await e({title:"批量删除",content:"批量删除选中的ip，是否继续操作？",column:[{prop:"ip",label:"IP"},q()],onConfirm:async()=>(await a(r),V(),!1)})}}],le=()=>{ne.value.address="",t({isAsync:!0,title:"添加IP".concat("ipBlackList"===D.value?"黑":"白","名单"),area:40,btn:"确认",component:()=>s((()=>import("./add-ip2.js?v=1734676359")),__vite__mapDeps([]),import.meta.url),compData:{listType:$.type,refreshEvent:()=>{V()}}})},ne=n({types:$.type,address:""}),oe=[{content:"一行一条配置，多个IP请换行"}],pe=n(),ce={address:[{validator:(e,a,t)=>{a.length>0?t():t(new Error("请输入IP地址"))},trigger:["blur","change"]}]},ue=async()=>{const{address:e}=ne.value,t={site_name:R.value.name,ip_type:"ipBlackList"===D.value?"black":"white",ips:e},s=await a({loading:B,request:y(t),message:!0});return s.status&&V(),s.status},me=n([]),_e=e=>{de.value=e||!1,t({isAsync:!0,title:"".concat(e?"编辑":"添加","编辑http认证").concat(e?"【".concat(e.auth_name,"】"):""),area:48,btn:"确认",component:()=>s((()=>import("./http-auth-add2.js?v=1734676359")),__vite__mapDeps([]),import.meta.url),compData:{refreshEvent:V,proxy_info:O.value.proxy_info,isEdit:!!e,row:e}})},ge=n([{label:"名称",prop:"auth_name"},{label:"路径",prop:"auth_path"},P([{onClick:_e,title:"编辑"},{onClick:async t=>{await e({title:"删除http认证【".concat(t.auth_name,"】"),content:"删除http认证【".concat(t.auth_name,"】，是否继续操作？")});(await a({loading:"正在删除http认证，请稍候...",request:L({site_name:R.value.name,auth_path:t.auth_path,name:t.auth_name}),message:!0})).status&&V()},title:"删除"}])]),he=e=>{me.value=e||[]},de=n(),ve=n({name:i(5),path:"",user:"",password:""}),be=[{content:"例如我设置了加密访问/test/,那我访问http://aaa.com/test/时就要输入账号密码才能访问"}],ye=n(),we={name:[{required:!0,message:"请输入名称",trigger:["blur","change"]}],path:[{required:!0,message:"请输入路径",trigger:["blur","change"]}],user:[{required:!0,message:"请输入用户名",trigger:["blur","change"]}],password:[{required:!0,message:"请输入密码",trigger:["blur","change"]}]},fe=(e,a)=>{const t=O.value.proxy_info.map((e=>({value:e.proxy_path})));a(e?t.filter((a=>a.value.includes(e))):t)},ke=async()=>{let e=ve.value;await ye.value.validate();const t={site_name:R.value.name,auth_path:e.path,username:e.user,password:e.password,name:e.name},s=de.value?w:f,i=await a({loading:B,request:s(t)});return i.status&&V(),i.status},Ee=()=>{de.value&&(ve.value.name=de.value.auth_name,ve.value.path=de.value.auth_path)},Le=n(),je=o({type:"default",accessLog:"",address:"",port:"514"}),ze={accessLog:[{validator:(e,a,t)=>{"file"!==je.type||a?t():t(new Error("请选择日志目录"))},trigger:["blur","change"]}],address:[{validator:(e,a,t)=>{"rsyslog"!==je.type||a?t():t(new Error("请输入接收地址"))},trigger:["blur","change"]}]},Ie=[{content:"指定目录可选择自定义的日志存储目录，请注意此目录必须www用户可写"},{content:"发送到远程服务器设置之后本地不会保存日志内容，填写前请确保日志接收端可正常访问"}],Pe=[{label:"默认",value:"default"},{label:"不记录日志",value:"off"},{label:"指定目录",value:"file"},{label:"发送到远程服务器",value:"rsyslog"}],qe=e=>{A({type:"dir",path:"/www/wwwroot",change:e=>{je.accessLog=e}})},Ae=e=>{e?(je.type=e.log_type,je.accessLog=e.log_path,je.address=e.rsyslog_host):je.type="default"},Te=async()=>{await Le.value.validate();const e={site_name:R.value.name,log_type:je.type,log_path:"file"==je.type?je.accessLog:je.address};return(await a({loading:B,request:k(e),message:!0})).status},xe=o({websocket:!1}),Re=async e=>{(await a({loading:B,request:E({site_name:R.value.name,websocket_status:e?1:0}),message:!0})).status||(xe.websocket=!e)},De=e=>{xe.websocket=!!e&&e.websocket_status},Oe=p({__name:"index",setup(e){const{BtTabs:a}=l({type:"card",value:D,options:[{label:"缓存",name:"cache",lazy:!0,render:()=>s((()=>import("./cache.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)},{label:"内容压缩",name:"compress",lazy:!0,render:()=>s((()=>import("./content-compression.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)},{label:"IP黑名单",name:"ipBlackList",lazy:!0,render:()=>s((()=>import("./ip-list.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)},{label:"IP白名单",name:"ipWhiteList",lazy:!0,render:()=>s((()=>import("./ip-list.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)},{label:"http认证",name:"basicauth",lazy:!0,render:()=>s((()=>import("./http-auth.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)},{label:"日志",name:"siteLogs",lazy:!0,render:()=>s((()=>import("./log2.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)},{label:"websocket",name:"websocket",lazy:!0,render:()=>s((()=>import("./websocket.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)}]});return c((()=>D.value),(e=>{V()})),u((async()=>{V()})),(e,t)=>(m(),_(g(a)))}}),Ve=Object.freeze(Object.defineProperty({__proto__:null,default:Oe},Symbol.toStringTag,{value:"Module"}));export{Ve as $,me as A,ge as B,Ae as C,Te as D,je as E,Pe as F,qe as G,Le as H,ze as I,Ie as J,De as K,xe as L,Re as M,ue as N,ne as O,oe as P,pe as Q,ce as R,Ee as S,re as T,ke as U,ve as V,de as W,fe as X,be as Y,ye as Z,we as _,X as a,C as b,S as c,W as d,B as e,N as f,H as g,O as h,M as i,Z as j,J as k,F as l,Q as m,K as n,G as o,D as p,ae as q,ee as r,Y as s,U as t,le as u,te as v,$ as w,ie as x,_e as y,he as z};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
