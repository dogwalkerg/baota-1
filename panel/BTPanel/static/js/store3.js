import{u as e,G as a,bx as t,o as s,R as r,l as i,H as o,M as n,r as l,bm as c,by as u,bz as d,bA as v,bB as m,aI as p,bt as g,bu as y,ah as h,T as w,a6 as f,bn as _,P as S,b0 as b,bC as T,bD as x,bE as E,bF as I,bG as P,bH as R}from"./utils-lib.js?v=1734676359";import{g as q,t as L,s as U,r as D,ax as O,h as V}from"./base-lib.js?v=1734676359";import{H as j}from"./store4.js?v=1734676359";import{p as H,q as A}from"./validator.js?v=1734676359";const C=q("HOME-HEADER-STORE",(()=>{const{panelVersion:q,payment:C,updatePush:k,panel:M,push:B,plugin:$,getUpdatePushInfo:N,getOldSenderAlarmListInfo:F}=e(),{bindUser:G,authType:J,authExpirationTime:z}=L(C.value),K=j(),{panelInfo:Q,systemInfo:W}=U(K),X=D([["plunge","30+款付费插件"],["function","20+企业版专享功能"],["certificate","2张SSL商用证书"],["message","1000条免费短信"],["time","5分钟极速响应"],["other","更多特权>>"]]),{isDebug:Y}=M.value,{isBeta:Z,cloudBeta:ee,isUpgrade:ae,grayscale:te}=L(Q.value),se=D(!1),re=D(!1),ie=D(""),oe=D(!1),ne=D(null),le=D({}),ce=D({}),ue=D({phone:"",status:!1}),de=D({phone:[{validator:(e,a,t)=>{ue.value.status?/^1[3456789]\d{9}$/.test(a)||/^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/.test(a)?t():t(new Error("请输入正确的手机号码或邮箱")):t()}}],give:[{required:!0,validator:(e,a,t)=>{0===a.length?t(new Error("请选择至少一种告警方式")):t()},trigger:["blur","change"]}]}),ve=O("popupClose",(()=>{})),me=async(e={})=>{try{const{data:a}=await g(e),t=window.vite_public_version,s=null==t?void 0:t.split(".").pop(),r=Number.parseInt(s).toString()===s&&2===s.length,{is_beta:i,version:o,beta:n,downUrl:l,updateMsg:c,uptime:u,grayscale_test:d}=a.msg;return ee.value=i,Z.value=r,le.value=n,ce.value={downUrl:l,updateMsg:c,version:o,uptime:u},te.value=d,a.status&&(ae.value=y(q.value,Z.value?n.version:o)),a}catch(a){return h(a),!1}},pe=async e=>{ge.value=e||!1,fe.value.switch=!0,i({title:"更新提示",area:50,btn:!0,component:()=>o((()=>import("./alarm.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)})},ge=D(!1),ye=D(),he=D(),we=D(!1),fe=D({switch:k.value.updatePush,give:[""],option:{}}),_e=D(!0),Se=D(!1),be=D(),Te=D([]);let xe;const Ee=V({webServe:!1,mysqlServe:!1,restartServe:!1,serveStart:!1}),Ie=()=>{xe=setInterval((async()=>{try{const e=await x();e&&(e.hasOwnProperty("status")||void 0!==e.code)&&(n.success("服务器重启成功!"),setTimeout((()=>{localStorage.clear(),sessionStorage.clear(),window.location.reload()}),2e3),clearInterval(xe))}catch(e){h(e)}}),3e3)},Pe=D(""),Re=async()=>{try{xe&&clearTimeout(xe);const{data:e}=await E();e.status||f(e.data)?(Pe.value=f(e.data)?e.data:e.msg||"暂无日志",f(e.data)?(n.msg({customClass:"bt-message-error-html",dangerouslyUseHTMLString:!0,message:e.msg+"".concat(e.status?"<br>请按 Ctrl+F5 刷新缓存，或等待5s自动刷新！":""),type:e.status?"success":"error",showClose:!e.status,duration:e.status?5e3:0}),e.status&&setTimeout((()=>{localStorage.clear(),sessionStorage.clear(),window.location.reload()}),5e3)):xe=setTimeout((()=>{Re()}),2e3)):n.error(e.msg)}catch(e){xe&&clearTimeout(xe),xe=setTimeout((()=>{Re()}),2e3)}},qe=D(!1),Le=D([]);return{bindUser:G,authType:J,authExpirationTime:z,systemInfo:W,panelInfo:Q,panelVersion:q,formPhone:ne,jumpRouter:e=>{l.push({path:"/config/".concat(e)})},histVersionInfoDialog:async()=>i({title:"历史版本",area:[60,52],component:()=>o((()=>import("./index270.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)}),onRepair:async()=>{await a({loading:"正在获取数据，请稍后...",request:t(),success:async e=>{const l=e.data;1===l.upgrade?(await s({title:"修复面板",content:'<div class="flex items-center">\n              <div class="mr-1rem w-[4rem]"><img width="40" src="/static/icons/icon-upgrade.svg"></img></div>\n              <div class="flex-1">\n                <div class="text-[1.6rem] leading-2.4rem">发现新版本，继续修复面板能修复使用中遇到的各种异常问题</div>\n              </div>\n            </div>\n            <div class="pl-5rem mt-[4px]">\n              <div>最新版本：'.concat(l.cloud.version,"</div>\n              <div>更新时间：").concat(r(1e3*l.cloud.update_time),"</div>\n            </div>"),icon:!1,width:"40rem",isHtml:!0,confirmText:"继续修复"}),a({loading:"正在修复面板，请稍后...",request:t({force:1}),message:!0,success:e=>{localStorage.clear(),sessionStorage.clear(),e.status&&setTimeout((()=>{i({title:"正在".concat("repair"===l.type?"修复":"更新","面板，请耐心等候..."),area:70,compData:{type:"repair"},component:()=>o((()=>import("./index71.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)})}),1500)}})):n.msg({message:'<div style="line-height:22px;">\n              <div>当前已是最新版本</div>\n              <div>当前版本：'.concat(l.local.version,"</div>\n              <div>更新时间：").concat(r(1e3*l.local.update_time),"</div>\n            </div>"),type:"success",dangerouslyUseHTMLString:!0})}})},restartSeverDialog:async()=>i({title:"重启服务器或者面板",area:[33,11],component:()=>o((()=>import("./index139.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)}),updateVersionDialog:async()=>i({area:50,component:()=>o((()=>import("./index271.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)}),advantageList:X,productPayment:()=>{H({disablePro:!0,sourceId:300})},loading:se,isUpgrade:ae,grayscale:te,isBeta:Z,betaInfo:le,officialInfo:ce,update:k,isNPSShow:oe,questions:ie,form:ue,rules:de,onOpen:async()=>{try{se.value=!0;const e=await me({check:!0});if(w(e))return;!e.status&&f(e.msg)&&(ve(),n.error(e.msg))}catch(e){h(e)}finally{se.value=!1}},submit:async e=>{if(""===ie.value)throw n.error("还有必填项没有填写哦~"),new Error("还有必填项没有填写哦~");ne.value.validate((async t=>{if(t){const t=(s=ue.value.phone,/^1[3456789]\d{9}$/.test(s)?"phone":/^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/.test(s)?"email":"unknown"),r={questions:JSON.stringify({22:ie.value}),product_type:18,software_name:1,rate:0};ue.value.status&&(r.feedback=JSON.stringify("phone"===t?{phone:ue.value.phone}:{email:ue.value.phone})),a({loading:"正在提交问卷，请稍后...",request:p(r),success:a=>{a.status&&(A(),e())}})}var s}))},ignoreUpdatEVersion:e=>{a({loading:"正在忽略本次更新，请稍后...",request:m({version:e}),message:!0,success:e=>{e.status&&ve()}})},getUpdatePushInfo:N,openUpdateReminder:async()=>{k.value.updatePush?pe(!k.value.updatePush):a({loading:"正在设置更新提醒，请稍后...",request:c({task_id:k.value.updateTaskId,status:0}),message:!0})},updateReminderDialog:pe,updateVersion:async e=>{let t;try{if("boolean"!=typeof e){const e=(await a({loading:"正在获取数据，请稍后...",request:u()})).data;return 1===e.upgrade?(await s({title:"升级面板",content:'<div class="flex items-center">\n            <div class="mr-1rem w-[4rem]"><img width="40" src="/static/icons/icon-upgrade.svg"></img></div>\n              <div class="flex-1">\n                <div class="text-[1.6rem] leading-2.4rem">发现新版本，升级面板有助于面板的BUG修复和功能加强，用户数据也不会受到影响</div>\n              </div>\n            </div>\n            <div class="pl-5rem mt-[4px]">\n              <div>最新版本：'.concat(e.cloud.version,"</div>\n              <div>更新时间：").concat(r(1e3*e.cloud.update_time),"</div>\n            </div>"),icon:!1,width:"40rem",isHtml:!0,confirmText:"继续升级"}),void a({loading:"正在升级面板，请稍后...",request:u({force:1}),message:!0,success:a=>{localStorage.clear(),sessionStorage.clear(),a.status&&setTimeout((()=>{i({title:"正在".concat("repair"===e.type?"修复":"更新","面板，请耐心等候..."),area:70,compData:{type:"upgrade"},component:()=>o((()=>import("./index71.js?v=1734676359")),__vite__mapDeps([]),import.meta.url)})}),1500)}})):void n.msg({message:'<div style="line-height:22px;">\n              <div>当前已是最新版本</div>\n              <div>当前版本：'.concat(e.local.version,"</div>\n              <div>更新时间：").concat(r(1e3*e.local.update_time),"</div>\n            </div>"),type:"success",dangerouslyUseHTMLString:!0})}if(await s({title:"升级面板",content:"温馨提示：升级面板，有助于面板的BUG修复和功能加强，但不会影响用户的数据，即使面板发生故障，用户数据也不会受到影响。请您放心进行升级。"}),t=await(async e=>{let a;try{const t=e?"升级Linux测试版":"切换到正式版",r=e?"请仔细阅读内测升级须知，是否升级Linux测试版？":"是否从测试版切换到正式版？";await s({type:"calc",title:t,content:r}),a=n.load("正在".concat(t,"，请稍候...")),localStorage.clear(),sessionStorage.clear(),Y&&(await v(),re.value=!0);const i=e?await P():await R();if(!i.status)return n.request(i)}catch(t){return!1}finally{ve(),localStorage.clear(),sessionStorage.clear()}return a})(e),!t)return;await me({check:!0});const l=await d({toUpdate:"yes"});re.value&&(await v(),re.value=!1),l.status?(n.success({msg:l.msg,onClose:()=>window.location.reload()}),setTimeout((()=>{window.location.reload()}),2e3)):n.error(l.msg)}catch(l){t&&t.close()}finally{t&&t.close(),ve(),localStorage.clear(),sessionStorage.clear()}},alarmRef:ye,pushMsgRef:he,msgForm:fe,checkedLoad:we,renderPushConfig:async()=>{we.value=!0,await F(),we.value=!1,fe.value.give=k.value.modulePush,fe.value.option=B.value.config},refreshAlarmEvent:()=>{var e;null==(e=ye.value)||e.refresh(),n.success("刷新成功")},onCancel:()=>{k.value.updatePush=ge.value},onConfirm:e=>{he.value.validate((async t=>{if(t){const t={task_data:JSON.stringify({task_data:{tid:"10",type:"panel_update",title:"面板更新提醒",status:fe.value.switch,count:0,interval:600,project:""},status:fe.value.switch,sender:fe.value.give,number_rule:{day_num:0,total:2},time_rule:{send_interval:0,time_range:[0,86399]}}),template_id:"10"};a({loading:"正在提交更新提示，请稍后...",request:_(t),message:!0,success:a=>{e(),N()}})}}))},showFooter:_e,showServer:Se,serverRestartRef:be,tipsList:Te,courseList:Ee,clearRestart:()=>{xe&&clearInterval(xe)},onRestartServer:async()=>{var e;try{Q.value.isRestart=!0,Te.value.splice(0,Te.value.length),_e.value=!1;const a=null==(e=be.value)?void 0:e.$el;if(a){const e=a.querySelector(".el-dialog__footer");a.querySelector(".el-dialog__body").style.height="26rem",e&&(e.style.display="none")}Ee.webServe=!0,await b({name:$.value.webserver,type:"stop"}),Ee.mysqlServe=!0,await b({name:"mysqld",type:"stop"}),Ee.restartServe=!0,await T(),Ee.serveStart=!0,Ie()}catch(a){h(a)}},onRestartPanel:async()=>{await s({icon:"warning-filled",title:"重启面板",content:"即将重启面板服务，继续吗？"}),a({loading:"正在重启面板，请稍候...",request:S(),message:!0,success:e=>{e.status&&setTimeout((()=>{localStorage.clear(),sessionStorage.clear(),window.location.reload()}),1e3)}})},logContent:Pe,getLog:Re,hisLoading:qe,histVersion:Le,getHistoryVersion:async()=>{await a({loading:qe,request:I(),data:[Array,Le]})},$reset:()=>{oe.value=!1,ie.value="",ue.value={phone:"",status:!1}}}}));export{C as H};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
