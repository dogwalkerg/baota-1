import{u as e,l as a,H as t,G as s,S as r,F as l,k as o,V as n,o as i,e as d}from"./utils-lib.js?v=1734676359";import{_ as p}from"./index90.js?v=1734676359";import{_ as c}from"./index97.js?v=1734676359";import{c as m,r as u,h as f,e as _,y as g,o as y,B as b,k as h,J as w,x as P,q as I,p as v,M as j,C as A,A as x,af as S,ad as V}from"./base-lib.js?v=1734676359";import{t as T,u as U,v as k}from"./firewall.js?v=1734676359";import{p as C}from"./validator.js?v=1734676359";import{u as q,r as E,d as F,e as L}from"./useMethod4.js?v=1734676359";import{a as O}from"./column.js?v=1734676359";import{_ as H}from"./index.vue_vue_type_script_setup_true_lang11.js?v=1734676359";import{getFirewallStore as J}from"./useStore4.js?v=1734676359";import"./__commonjsHelpers__.js?v=1734676359";import"./index91.js?v=1734676359";const N={class:"flex items-center"},R=d(m({__name:"index",setup(d){const{payment:m}=e(),{refs:{systemTabActive:R}}=J(),D=u(null),M=u([]),z=u(""),B=u(0),G=u(!1),Z=f({p:1,row:20,chain:"ALL"}),K=(e,s)=>{a({title:e?"修改IP规则":"添加IP规则",area:44,component:()=>t((()=>import("./add-ip-rules.js?v=1734676359")),__vite__mapDeps([]),import.meta.url),showFooter:!0,compData:{...s,isEdit:e,refreshFn:Q}})},Q=async()=>{"ip"===R.value&&await s({loading:G,request:T({...Z,query:z.value}),data:{data:[Array,M],page:r(B)}})},W=(e,a)=>({operation:a,address:e.Address,strategy:e.Strategy,chain:e.Chain,family:e.Family,zone:e.Zone}),X=[{label:"删除",value:"delete",event:async(e,a)=>{await L(e,a,(async(e,a)=>{const t=W(e,"remove");return await k(t)}),{label:"IP地址",prop:"Address"},Q)}}],Y=[O(),{label:"IP地址",prop:"Address",width:120},{label:"IP归属地",render:e=>"ltd"!=m.value.authType?_("span",{class:"bt-link",onClick:()=>C({sourceId:116})},[g("点击查看")]):_("span",null,[(e.area.continent||"")+(e.area.info||"--")])},...q({changePolicy:async e=>{const a="accept"!==e.Strategy;await i({icon:"warning-filled",title:(a?"放行":"禁止")+"端口规则策略【"+e.Address+"】",content:"修改IP策略为“".concat(a?"放行":"禁止","”，设置后该IP将").concat(a?"恢复正常访问":"禁止访问服务器","，是否继续操作？")});const t={old_data:JSON.stringify(e),new_data:JSON.stringify({...W({...e,Strategy:a?"accept":"drop"},"add"),brief:e.brief})};await s({loading:"正在修改IP规则策略，请稍后...",request:U(t),message:!0,success:Q})}}),{label:"备注",prop:"brief"},{label:"时间",prop:"addtime",renderHeader:()=>E("时间","-- : 表示面板数据库中未记录创建时间，规则从系统中直接读取，忽略即可")},F({editEvent:e=>K(!0,e),deleteEvent:async e=>{await i({icon:"warning-filled",title:"删除端口规则【"+e.Address+"】",content:"删除选中的规则后，该IP将使用默认放行的方式，是否继续操作？"}),await s({loading:"正在删除IP规则，请稍后...",request:k(W(e,"remove")),message:!0,success:Q})}})];return y((()=>Q())),(e,a)=>{const t=x,s=S,r=V,i=l,d=o,m=n,u=c,f=p,y=b("bt-loading");return h(),w(f,null,{"header-left":P((()=>[_(t,{type:"primary",onClick:a[0]||(a[0]=e=>K())},{default:P((()=>a[8]||(a[8]=[g("添加IP规则")]))),_:1}),_(H,{type:"ip",refreshFn:Q})])),"header-right":P((()=>[_(r,{class:"mr-[1rem]",modelValue:v(Z).chain,"onUpdate:modelValue":a[1]||(a[1]=e=>v(Z).chain=e),onChange:a[2]||(a[2]=e=>Q())},{default:P((()=>[I("div",N,[_(s,{label:"ALL"},{default:P((()=>a[9]||(a[9]=[g("所有方向")]))),_:1}),_(s,{label:"INPUT"},{default:P((()=>a[10]||(a[10]=[g("入站")]))),_:1}),_(s,{label:"OUTPUT"},{default:P((()=>a[11]||(a[11]=[g("出站")]))),_:1})])])),_:1},8,["modelValue"]),_(i,{class:"!w-[32rem]",modelValue:v(z),"onUpdate:modelValue":a[3]||(a[3]=e=>j(z)?z.value=e:null),onSearch:a[4]||(a[4]=e=>Q()),placeholder:"请输入IP地址/备注"},null,8,["modelValue"])])),content:P((()=>[A(_(d,{ref_key:"ipTableRef",ref:D,column:Y,data:v(M),description:"IP列表为空"},null,8,["data"]),[[y,v(G)],[y,"正在加载IP列表，请稍后...","title"]])])),"footer-left":P((()=>[_(m,{"table-ref":v(D),options:X},null,8,["table-ref"])])),"footer-right":P((()=>[_(u,{ref:"ipRulesPager",total:v(B),page:v(Z).p,"onUpdate:page":a[5]||(a[5]=e=>v(Z).p=e),row:v(Z).row,"onUpdate:row":a[6]||(a[6]=e=>v(Z).row=e),onChange:a[7]||(a[7]=e=>Q()),name:"ip"},null,8,["total","page","row"])])),_:1})}}}),[["__scopeId","data-v-2eb786ec"]]);export{R as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
